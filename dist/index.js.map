{"version":3,"file":"index.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxEA;AACA;;;;AEDA;AACA;AACA;AACA;AACA","sources":["../webpack://changelogs-generator-action/./src/changelogs.ts","../webpack://changelogs-generator-action/webpack/runtime/compat","../webpack://changelogs-generator-action/webpack/before-startup","../webpack://changelogs-generator-action/webpack/startup","../webpack://changelogs-generator-action/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (_a) => {\n    var props = __rest(_a, []);\n    const owner = props.context.repo.owner;\n    const repo = props.context.repo.repo;\n    const formatMsg = (pr) => `- ${pr.title} in [#${pr.number}](${pr.html_url}) by (@${pr.author})`;\n    const commits = {\n        feature: props.prs\n            .filter((pr) => pr.title.startsWith(\"feat\") || pr.title.startsWith(\"optimize\"))\n            .map((pr) => formatMsg(pr))\n            .join(\"\\n\"),\n        fix: props.prs\n            .filter((pr) => pr.title.startsWith(\"fix\") ||\n            pr.title.startsWith(\"hotfix\") ||\n            pr.title.startsWith(\"patch\"))\n            .map((pr) => formatMsg(pr))\n            .join(\"\\n\"),\n        other: props.prs\n            .filter((pr) => pr.title.startsWith(\"chore\") ||\n            pr.title.startsWith(\"refactor\") ||\n            pr.title.startsWith(\"ci\") ||\n            pr.title.startsWith(\"doc\") ||\n            pr.title.startsWith(\"style\"))\n            .map((pr) => formatMsg(pr))\n            .join(\"\\n\")\n    };\n    const newContributors = props.prs\n        .filter((pr) => pr.is_new_contributor)\n        .map((pr) => `- @${pr.author} made their first contribution in [#${pr.number}](${pr.html_url})`)\n        .join(\"\\n\");\n    const content = `\n${commits.feature.length > 0 ? \"### Features\" : \"\"}\n${commits.feature.length > 0 ? commits.feature : \"\"}\n\n${commits.fix.length > 0 ? \"### Bug Fixes\" : \"\"}\n${commits.fix.length > 0 ? commits.fix : \"\"}\n\n${commits.other.length > 0 ? \"### Others\" : \"\"}\n${commits.other.length > 0 ? commits.other : \"\"}\n  `.trim();\n    return `\n## Context\n\nðŸš€ @daebot proposed the following changelogs for release v0.1.0 generated in [workflow run](https://github.com/${owner}/${repo}/actions/runs/${props.context.runId}).\n\n## Changelogs\n\n<!-- BEGIN CHANGELOGS -->\n${content}\n\n${repo === \"dae\"\n        ? `**Example Config**: https://github.com/daeuniverse/dae/blob/${props.inputs.futureRelease}/example.dae`\n        : \"\"}\n\n**Full Changelog**: https://github.com/${owner}/${repo}/compare/${props.inputs.previousRelease}...${props.inputs.futureRelease}\n\n${newContributors.length > 0 ? \"## New Contributors\" : \"\"}\n\n${newContributors.length > 0 ? newContributors : \"\"}\n`.trim();\n};\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[318](0, __webpack_exports__);\n",""],"names":[],"sourceRoot":""}
